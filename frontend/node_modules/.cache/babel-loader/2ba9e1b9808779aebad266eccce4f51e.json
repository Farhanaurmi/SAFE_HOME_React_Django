{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Urmi\\\\Desktop\\\\SAFE_HOME_REACT_DJANGO\\\\frontend\\\\src\\\\screen\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen({\n  history,\n  match\n}) {\n  _s();\n\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, history, successUpdate, dispatch]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: user._id,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"admin/userlist\",\n      children: \" Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 31\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"admin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            Label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserEditScreen, \"VTziWJd7Kim4hqpRYfVE/JvbPKU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/Users/Urmi/Desktop/SAFE_HOME_REACT_DJANGO/frontend/src/screen/UserEditScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Form","Button","LinkContainer","getUserDetails","updateUser","Message","Loader","USER_UPDATE_RESET","FormContainer","UserEditScreen","history","match","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","error","loading","user","userUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","_id","Number","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { Form,Button } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { getUserDetails,updateUser } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction UserEditScreen({ history,match }) {\r\n    \r\n    const userId = match.params.id\r\n\r\n    const [name,setName]= useState('')\r\n    const [email,setEmail]= useState('')\r\n    const [isAdmin,setIsAdmin]= useState(false)\r\n\r\n\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const userDetails=useSelector(state=>state.userDetails)\r\n    const { error, loading, user }=userDetails\r\n\r\n    const userUpdate=useSelector(state=>state.userUpdate)\r\n    const { error:errorUpdate, loading:loadingUpdate, success:successUpdate }=userUpdate\r\n   \r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type:USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id !== Number(userId) ){\r\n                dispatch(getUserDetails(userId))\r\n    \r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n      \r\n        }\r\n\r\n    }, [user,userId,history,successUpdate,dispatch])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Link to='admin/userlist'> Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loadingUpdate && <Loader />}\r\n            {loading ? (<Loader/>)\r\n            : error ? ( <Message variant='danger'>{error}</Message>)\r\n            :(\r\n            <Form onSubmit={ submitHandler }>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={(e)=>setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='admin'>\r\n                    <Form.Check\r\n                    type='checkbox'\r\n                    Label='Is Admin'\r\n                    checked={isAdmin}\r\n                    onChange={(e)=>setIsAdmin(e.target.checked)}\r\n                    >\r\n                    </Form.Check>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Update</Button>\r\n            </Form>\r\n            )}\r\n            </FormContainer>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UserEditScreen"]},"metadata":{},"sourceType":"module"}