{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\SAFE_HOME_REACT_DJANGO\\\\frontend\\\\src\\\\screen\\\\ApartmentEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { listApartmentDetails, updateApartment } from '../actions/apartmentActions';\nimport { APARTMENT_UPDATE_RESET, APARTMENT_CREATE_RESET } from '../constants/apartmentConstants';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ApartmentEditScreen({\n  history,\n  match\n}) {\n  _s();\n\n  const apartmentId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [price, setPrice] = useState(0);\n  const [availability, setAvailability] = useState(true);\n  const [photo, setPhoto] = useState('');\n  const [details, setDetails] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const apartmentDetails = useSelector(state => state.apartmentDetails);\n  const {\n    error,\n    loading,\n    apartment\n  } = apartmentDetails;\n  const apartmentUpdate = useSelector(state => state.apartmentUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = apartmentUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: APARTMENT_UPDATE_RESET\n      });\n      dispatch({\n        type: APARTMENT_CREATE_RESET\n      });\n      history.push('/');\n    } else {\n      if (!apartment.title || apartment.id !== Number(apartmentId)) {\n        dispatch(listApartmentDetails(apartmentId));\n      } else {\n        setTitle(apartment.title);\n        setPrice(apartment.price);\n        setPhoto(apartment.photo);\n        setAvailability(apartment.availability);\n        setDetails(apartment.details);\n      }\n    }\n  }, [apartment, apartmentId, history, dispatch, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateApartment({\n      id: apartmentId,\n      title,\n      price,\n      photo,\n      availability,\n      details\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('apartment_id', apartmentId);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/apartment/image/update', formData, config);\n      setPhoto(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \" Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Apartment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 35\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Title\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"photo\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Photo\",\n            value: photo,\n            onChange: e => setPhoto(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"Price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"Details\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Details\",\n            value: details,\n            onChange: e => setDetails(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"availability\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Availability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            Label: \"Availability\",\n            checked: availability,\n            onChange: e => setAvailability(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApartmentEditScreen, \"tgiLARH5b1yxQKUoQBRJL95UJpk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ApartmentEditScreen;\nexport default ApartmentEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApartmentEditScreen\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/SAFE_HOME_REACT_DJANGO/frontend/src/screen/ApartmentEditScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Form","Button","listApartmentDetails","updateApartment","APARTMENT_UPDATE_RESET","APARTMENT_CREATE_RESET","Message","Loader","FormContainer","axios","ApartmentEditScreen","history","match","apartmentId","params","id","title","setTitle","price","setPrice","availability","setAvailability","photo","setPhoto","details","setDetails","uploading","setUploading","dispatch","apartmentDetails","state","error","loading","apartment","apartmentUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","Number","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { listApartmentDetails, updateApartment } from '../actions/apartmentActions'\r\nimport { APARTMENT_UPDATE_RESET, APARTMENT_CREATE_RESET } from '../constants/apartmentConstants'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction ApartmentEditScreen({ history, match }) {\r\n\r\n    const apartmentId = match.params.id\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [availability, setAvailability] = useState(true)\r\n    const [photo, setPhoto] = useState('')\r\n    const [details, setDetails] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const apartmentDetails = useSelector(state => state.apartmentDetails)\r\n    const { error, loading, apartment } = apartmentDetails\r\n\r\n    const apartmentUpdate = useSelector(state => state.apartmentUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = apartmentUpdate\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n\r\n            dispatch({ type: APARTMENT_UPDATE_RESET })\r\n            dispatch({ type: APARTMENT_CREATE_RESET })\r\n            history.push('/')\r\n        } else {\r\n            if (!apartment.title || apartment.id !== Number(apartmentId)) {\r\n                dispatch(listApartmentDetails(apartmentId))\r\n\r\n            } else {\r\n                setTitle(apartment.title)\r\n                setPrice(apartment.price)\r\n                setPhoto(apartment.photo)\r\n                setAvailability(apartment.availability)\r\n                setDetails(apartment.details)\r\n            }\r\n\r\n        }\r\n\r\n    }, [apartment, apartmentId, history, dispatch, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateApartment({ id: apartmentId, title, price, photo, availability, details }))\r\n\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('apartment_id', apartmentId)\r\n        setUploading(true)\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/apartment/image/update', formData, config)\r\n            setPhoto(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/'> Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Apartment</h1>\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loadingUpdate && <Loader />}\r\n                {loading ? (<Loader />)\r\n                    : error ? (<Message variant='danger'>{error}</Message>)\r\n                        : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='title'>\r\n                                    <Form.Label>Title</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter Title'\r\n                                        value={title}\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='photo'>\r\n                                    <Form.Label>Photo</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter Photo'\r\n                                        value={photo}\r\n                                        onChange={(e) => setPhoto(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                    <Form.File\r\n                                        id='image-file'\r\n                                        label='Choose File'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}\r\n                                    >\r\n\r\n                                    </Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='Price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter Price'\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='Details'>\r\n                                    <Form.Label>Details</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter Details'\r\n                                        value={details}\r\n                                        onChange={(e) => setDetails(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='availability'>\r\n                                    <Form.Label>Availability</Form.Label>\r\n                                    <Form.Check\r\n                                        type='checkbox'\r\n                                        Label='Availability'\r\n                                        checked={availability}\r\n                                        onChange={(e) => setAvailability(e.target.checked)}\r\n                                    >\r\n\r\n                                    </Form.Check>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>Update</Button>\r\n                            </Form>\r\n                        )}\r\n            </FormContainer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ApartmentEditScreen\r\n"]},"metadata":{},"sourceType":"module"}