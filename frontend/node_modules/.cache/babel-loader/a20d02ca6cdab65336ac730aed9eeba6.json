{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/users/profile/update', user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Urmi/Desktop/SAFE_HOME_REACT_DJANGO/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","ORDER_LIST_MY_RESET","USER_LIST_RESET","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login=(email,password)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({type:USER_LOGIN_REQUEST})\r\n        const config ={\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const{ data }= await axios.post( \r\n            '/api/users/login', \r\n            { 'username':email , 'password':password }, config )\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data})\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n\r\n\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout=()=>(dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n    dispatch({type:USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n    dispatch({type:USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register=(name,email,password)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({type:USER_REGISTER_REQUEST})\r\n        const config ={\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const{ data }= await axios.post( \r\n            '/api/users/register', \r\n            { 'name':name ,'email':email , 'password':password }, config )\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload: data})\r\n        \r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data})\r\n            \r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n\r\n\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails =(id)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({type:USER_DETAILS_REQUEST})\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        }= getState()\r\n\r\n        const config ={\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const{ data }= await axios.get( \r\n            `/api/users/${id}`, config )\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload: data})\r\n        \r\n    \r\n    }\r\n\r\n\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile =(user)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({type:USER_UPDATE_PROFILE_REQUEST})\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        }= getState()\r\n\r\n        const config ={\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const{ data }= await axios.put( \r\n            '/api/users/profile/update',\r\n            user,\r\n             config )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data})\r\n        \r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data})\r\n            \r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    \r\n    }\r\n\r\n\r\n\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}