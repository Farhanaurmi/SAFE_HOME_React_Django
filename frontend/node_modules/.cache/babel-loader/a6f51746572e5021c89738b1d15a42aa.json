{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Urmi\\\\Desktop\\\\SAFE_HOME_REACT_DJANGO\\\\frontend\\\\src\\\\screen\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen({\n  history\n}) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmpassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmpassword) {\n      setMessage('Password did not match');\n    } else {\n      dispatch(updateUserProfile({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n      setMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: 10,\n      className: \"justify-content-md-center text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PROFILE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmpassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmpassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserEditScreen, \"5rpiLKzr+sV5xnFPDHRfYc1ELlg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/Users/Urmi/Desktop/SAFE_HOME_REACT_DJANGO/frontend/src/screen/UserEditScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Row","Col","Form","Button","getUserDetails","updateUserProfile","Message","Loader","USER_UPDATE_PROFILE_RESET","UserEditScreen","history","name","setName","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","error","loading","user","userLogin","userInfo","userUpdateProfile","success","push","_id","type","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { Row,Col,Form,Button } from 'react-bootstrap'\r\nimport { getUserDetails,updateUserProfile } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({history}) {\r\n\r\n    const [name,setName]= useState('')\r\n    const [email,setEmail]= useState('')\r\n    const [password,setPassword]= useState('')\r\n    const [confirmpassword,setConfirmPassword]= useState('')\r\n    const [message,setMessage]= useState('')\r\n\r\n\r\n    const dispatch= useDispatch()\r\n    const userDetails=useSelector(state=>state.userDetails)\r\n    const {error,loading,user}=userDetails\r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n    const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\r\n    const { success }=userUpdateProfile\r\n   \r\n\r\n    useEffect(() => {\r\n        if (!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id ){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n  \r\n    }, [dispatch,history,userInfo,user,success])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        if (password != confirmpassword){\r\n            setMessage('Password did not match')\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id':user._id,\r\n                'name':name,\r\n                'email':email,\r\n                'password':password,\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={10} className=\"justify-content-md-center text-left\">\r\n            <h1>PROFILE</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={(e)=>setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    value={confirmpassword}\r\n                    onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n\r\n                <Button type='submit' variant='primary'>Update</Button>\r\n            </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n"]},"metadata":{},"sourceType":"module"}